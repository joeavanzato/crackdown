package internal

import "time"

var webshellIndicatorStrings = []string{
	"WebHandler Language=\"C#\" class=",
	"<%response.clear:execute request",
	"%Response.Write(eval(Request.Item",
	"= new Process();",
	".CreateCommand();",
	"StartInfo.FileName = \"cmd.exe\";",
	"StartInfo.RedirectStandardOutput = true;",
	"-executionpolicy bypass",
	" new ProcessStartInfo();",
	".StartInfo.UseShellExecute",
	"GetLogicalDrives()",
	"System.IO.DirectoryInfo",
	"克隆文件的最后修改时间",
	".ServiceProcess.ServiceController.GetServices",
	"Exec Cmd",
	"HKEY_LOCAL_MACHINE",
	"HKEY_CLASSES_ROOT",
	"HKEY_CURRENT_USER",
	"HKLM",
	"HKCR",
	"HKCU",
	"runat=\"server\"",
	"new DeflateStream(",
	"New-Object IO.StreamReader",
	".BinaryWrite",
	"Scripting.FileSystemObject",
	", \"rb\")",
	" popen(",
	"echo <<< EOF",
	"PF_INET, SOCK_STREAM",
	"exec(",
	"shell_exec",
	"echo system(",
	".getRuntime().exec(",
	"getOutputStream()",
	"cmd.exe",
	"powershell.exe",
	"wscript.exe",
	"cscript.exe",
	";eval(",
	"new ActiveXObject(",
	".StdOut.ReadAll()",
}

var suspiciousPatterns = []string{
	"BEGIN {s = \"/inet/tcp/0/",
	"bash -i >& /dev/tcp/",
	"bash -i >& /dev/udp/",
	"sh -i >$ /dev/udp/",
	"sh -i >$ /dev/tcp/",
	"&& while read line 0<&5; do",
	"/bin/bash -c exec 5<>/dev/tcp/",
	"/bin/bash -c exec 5<>/dev/udp/",
	"nc -e /bin/sh ",
	"/bin/sh | nc",
	"rm -f backpipe; mknod /tmp/backpipe p && nc ",
	";socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))",
	";STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;",
	"/bin/sh -i <&3 >&3 2>&3",
	"uname -a; w; id; /bin/bash -i",
	"([text.encoding]::ASCII).GetBytes",
	"$stream.Flush()",
	"exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)",
	"while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print",
	"socat exec:''bash -li'',pty,stderr,setsid,sigint,sane tcp",
	"rm -f /tmp/p; mknod /tmp/p p &&",
	"/bin/bash | telnet",
	"echo=0,raw tcp-listen:",
	"nc -lvvp",
	"xterm -display 1",
	"ncat",
	"alias sudo",
	"https://",
	"/bin/sh -c",
	"bash -i >&",
	"$(dig",
	"/etc/shadow",
	"/etc/passwd",
}

var timestampNow = time.Now()

var ipv6Regex = `^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$`
var ipv4Regex = `^(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4})`
var domainRegex = `^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$`
